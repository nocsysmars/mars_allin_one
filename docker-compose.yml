version: '3.4'

services: 
  #keepalive:
  #  image: osixia/keepalived:1.4.5
  #  container_name: keepalived
  #  privileged: true
  #  volumes:
  #    - ./conf/keepalived/keepalived.conf:/usr/local/etc/keepalived/keepalived.conf
  #  network_mode: host
  #  logging:
  #      driver: "json-file"
  #      options:
  #         max-size: "10m"
  #         max-file: "2"

  #ovn:
  #  image: ovn-21.03.0-32.fc33
  #  build:
  #      context: dockerfile/ovn

  nginx:
    image: nocsysmars/nginx:1.27.0-mars
    restart: always
    build:
        context: .
        dockerfile: ./dockerfile/nginx/Dockerfile
    container_name: nginx
    volumes:
        - ./conf/nginx/filebeat.yml:/etc/filebeat/filebeat.yml
        - ./conf/nginx/:/etc/nginx/
        - ./conf/tftpserver:/etc/xinetd.d
        - ./swi:/opt/
        - ./download:/opt/download
        - ./public:/opt/public
    #depends_on:
    #  - mars
    #network_mode: host
    ports:
    - 443:443
    - 80:80
    networks:
       network:
          ipv4_address: 10.10.10.2
    logging:
        driver: "json-file"
        options:
           max-size: "10m"
           max-file: "2"

  elasticsearch:
    build:
        context: .
        dockerfile: ./dockerfile/elasticsearch/Dockerfile
    image: nocsysmars/elasticsearch:7.9.0-oss
    container_name: elasticsearch
    privileged: true
    #network_mode: host
    #ports:
    #- 9200:9200
    networks:
       network:
          ipv4_address: 10.10.10.3
    volumes:
      - ./conf/elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
      - ./conf/elasticsearch/jvm.options:/usr/share/elasticsearch/config/jvm.options:ro
      - ./conf/elasticsearch/backup:/mnt/backup:rw
      - ./conf/elasticsearch/data:/usr/share/elasticsearch/data:rw
    logging:
        driver: "json-file"
        options:
           max-size: "10m"
           max-file: "2"

  #kibana:
  #  image: docker.elastic.co/kibana/kibana-oss:7.9.0
  #  container_name: kibana
  #  privileged: true
  #  #network_mode: host
  #  ports:
  #  - 5601:5601
  #  networks:
  #     network:
  #        ipv4_address: 10.10.10.6
  #  volumes:
  #    - ./conf/kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
  #  logging:
  #      driver: "json-file"
  #      options:
  #         max-size: "10m"
  #         max-file: "2"
  #  depends_on:
  #    - elasticsearch


  logstash:
    build: 
      context: .
      dockerfile: ./dockerfile/logstash/Dockerfile
    image: nocsysmars/logstash:7.5.2-oss
    container_name: logstash
    privileged: true
    #network_mode: host
    ports:
        - 6614:6614
        - 5514:5514
        - 5044:5044
        - 6343:6343
        - 25826:25826
    networks:
       network:
          ipv4_address: 10.10.10.4
    volumes:
      - ./conf/logstash/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./conf/logstash/pipeline:/usr/share/logstash/pipeline:ro
      - ./conf/logstash/types.db:/usr/share/logstash/types.db:ro
      - ./conf/logstash/default-template.json:/usr/share/logstash/default-template.json:ro
    environment:
      LS_JAVA_OPTS: "-Xmx2g -Xms2g"
      ES_HOSTS: "${ES_HOSTS_IP:-10.10.10.3:9200}"
    depends_on:
      - elasticsearch
    logging:
        driver: "json-file"
        options:
           max-size: "10m"
           max-file: "2"

  mars:
    image: nocsysmars/mars:accton
    restart: always
    container_name: mars
    #network_mode: host
    ports:
      #- 38181:8181
      - 38101:8101
    networks:
       network:
          ipv4_address: 10.10.10.5
    privileged: true
    #mem_limit: 4g
    healthcheck:
      test: curl --fail -u marsinneruser:onlycodeused -I 'http://10.10.10.5:8181/mars/v1/network/configuration' || exit 1
      interval: 30s
      retries: 2
      start_period: 60s
      timeout: 5s
    environment:
      #WORK_NODE_IP, LOGSTASH_SERVICE_HOST for logstash websocket
      - "WORK_NODE_IP=10.10.10.4"
      - "LOGSTASH_SERVICE_HOST=10.10.10.4"
      - "ONOS_IP=10.10.10.5"
      #clos,staticfabric-fr,staticfabric,bgptopology
      - "ONOS_TOPOLOGY=clos"
      #unnumbered, numbered for sonic like
      - "FABRIC_ADDRESS=unnumbered"
#      - "ES_DOC=_doc"
      - "ES_HOSTS=${ES_HOSTS_IP:-10.10.10.3:9200}"
      - "JAVA_OPTS=-Xms4G -Xmx4G -XX:+UseConcMarkSweepGC -XX:+CMSIncrementalMode -Dds.lock.timeout.milliseconds=10000"
#      - "KARAF_DEBUG=true"
#This APPS for CLOS tenant 
#to use different ONOS_APPS env, please ref README
      - "ONOS_APPS=drivers\
,com.accton.drivers.accton.gnmi\
,com.accton.drivers.accton.rest\
,com.accton.drivers.accton.snmp\
,proxyarp\
,restsb\
,snmp\
,org.onosproject.netconf\
,org.onosproject.drivers.netconf\
,org.onosproject.drivers.h3c.netconf\
,linkdiscovery\
,com.accton.provider.switchpolling\
,com.accton.eventclient\
,com.accton.useraccount\
,com.accton.defaultcfg\
,com.accton.alert\
,com.accton.analyzer\
,com.accton.utility\
,com.accton.healthycheck\
,com.accton.dhcprelay\
,com.accton.dhcpserver\
,com.accton.dhcpv6server\
,com.accton.logicalport\
,com.accton.endpoint\
,com.accton.monitor\
,com.accton.ntpserver\
,com.accton.qos\
,com.accton.sflow\
,com.accton.storm-control\
,com.accton.switchmgmt\
,com.accton.egp\
,com.accton.tenant\
,com.accton.tenantlogicalrouter\
,com.accton.topology\
,com.accton.acl\
,com.accton.websocket\
,com.accton.webssh"
    volumes:
      - ./conf/mars/filebeat.yml:/etc/filebeat/filebeat.yml
      - ./conf/mars/mars_collectd.conf:/etc/collectd/collectd.conf
      - ./download:/root/onos/download
      - ./swi:/opt
      - /etc/localtime:/etc/localtime
      - /etc/timezone:/etc/timezone
    #depends_on:
    #  - elasticsearch
    logging:
        driver: "json-file"
        options:
           max-size: "10m"
           max-file: "2"



#  radius:
#        image: freeradius/freeradius-server:3.0.21
#        container_name: marsradius
#        network_mode: host
#        privileged: true
#        mem_limit: 1g
#        volumes:
#                - ./conf/radius/authorize:/etc/raddb/mods-config/files/authorize
#                - ./conf/radius/clients.conf:/etc/raddb/clients.conf
#        logging:
#               driver: "json-file"
#               options:
#                       max-size: "1k"
#                       max-file: "2"

#  grafana:
#       image: grafana/grafana-enterprise
#       container_name: grafana
#       network_mode: host
#       privileged: true
#       mem_limit: 1g
#       environment:
#         -  "GF_SERVER_HTTP_PORT=3001"
#       logging:
#           driver: "json-file"
#           options:
#              max-size: "10m"
#              max-file: "2"


#  prometheus:
#    image: prom/prometheus
#    container_name: prometheus
#    network_mode: host
#    privileged: true
#    mem_limit: 1g
#    volumes:
#       - ./conf/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml 
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "1m"
#        max-file: "2"

#  prometheus-node-exporter:
#    image: prom/node-exporter
#    container_name: node-exporter
#    network_mode: host
#    privileged: true
#    mem_limit: 1g
#    logging:
#      driver: "json-file"
#      options:
#        max-size: "1m"
#        max-file: "2"
networks:
    network:
        driver: bridge
        ipam:
          config:
             - subnet: 10.10.10.0/24

