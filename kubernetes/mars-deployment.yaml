---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  namespace: accton-mars
  name: mars
spec:
  serviceName: mars
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: mars
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mars
    spec:
      containers:
      - name: mars
        image: 'nocsysmars/mars:accton'
        imagePullPolicy: IfNotPresent
        command: ["/root/onos/run_k8s.sh"]
        ports:
        - containerPort: 8101
        - containerPort: 8181
        - containerPort: 8443
        resources:
          requests:
            memory: "8Gi"
          requests:
              cpu: 500m
        env:
        - name: ONOS_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        - name: WORK_NODE_IP
          valueFrom:
            fieldRef:
              fieldPath: status.hostIP
        - name: ONOS_TOPOLOGY
          valueFrom:
            configMapKeyRef:
              name: mars-configmap
              key: mars_env_topology
        - name: FABRIC_ADDRESS
          value: "unnumbered"
        - name: ES_DOC
          value: "_doc"
        - name: KARAF_DEBUG
          value: "true"
        - name: ES_HOSTS
          value: "elasticsearch.accton-mars.svc.cluster.local:9200"
        - name: JAVA_OPTS
          valueFrom:
            configMapKeyRef:
              name: mars-configmap
              key: mars_env_java_ops
        - name: ONOS_APPS
          valueFrom:
            configMapKeyRef:
              name: mars-configmap
              key: mars_env_onos_app
        volumeMounts:
        - name: mars-download-claim
          mountPath: /root/onos/download
  volumeClaimTemplates:
  - metadata:
      name: mars-download-claim
    spec:
      accessModes: [ "ReadWriteOnce" ]
      #storageClassName: "local-storage-2"
      resources:
        requests:
          storage: 4Gi      
